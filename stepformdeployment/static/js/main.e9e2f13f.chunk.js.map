{"version":3,"sources":["Components/step.tsx","config.ts","Components/Sign_in/registration1.tsx","Components/Sign_in/registration2.tsx","Components/Sign_in/success.tsx","Components/Sign_in/registration.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Steps","props","className","version","id","xmlns","x","y","viewBox","width","height","fill","cx","cy","r","step","Appcontext","React","createContext","state","setState","Registration1","useContext","email","name","errorMessage","onchange","isloading","e","target","value","save_step1","preventDefault","step1","step2","onSubmit","type","onChange","required","onClick","href","Registration2","password","confirm_password","save_step2","submitform","data","axios","post","then","res","step3","catch","err","Success","Registration","useState","Provider","App","component","path","exact","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9e2f13f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\n\n\nconst Steps = (props) => {\n  return (\n    <div>\n      <div className=\"row jcenter\">\n        <div className=\"col-md-4\">\n          <svg\n            version=\"1.1\"\n            id=\"svg_form_time\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 824 24\"\n          >\n            <rect\n              x=\"12\"\n              y=\"9\"\n              width=\"200\"\n              height=\"6\"\n              fill=\"rgb(230, 230, 230)\"\n            ></rect>\n            <circle\n              cx=\"12\"\n              cy=\"12\"\n              r=\"12\"\n              width=\"12\"\n              height=\"6\"\n              fill={props.step==1?\"#735400\":\"rgb(230, 230, 230)\"}\n            ></circle>\n            <rect\n              x=\"212\"\n              y=\"9\"\n              width=\"200\"\n              height=\"6\"\n              fill=\"rgb(230, 230, 230)\"\n            ></rect>\n            <circle\n              cx=\"212\"\n              cy=\"12\"\n              r=\"12\"\n              width=\"212\"\n              height=\"6\"\n              fill={props.step==2?\"#735400\":\"rgb(230, 230, 230)\"}\n            ></circle>\n            <circle\n              cx=\"412\"\n              cy=\"12\"\n              r=\"12\"\n              width=\"412\"\n              height=\"6\"\n              fill={props.step==3?\"#735400\":\"rgb(230, 230, 230)\"}\n            ></circle>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Steps;\n","import React from \"react\";\n\nexport const Appcontext:any = React.createContext({\n  state: {},\n  setState: () => {},\n});\n\nexport const root = \"https://stepformbackend.herokuapp.com/\"","import axios from \"axios\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./signin.css\";\nimport Steps from '../step';\nimport { Appcontext } from \"../../config\";\n\nconst Registration1 = (props) => {\n  const { state, setState }: any = useContext(Appcontext);\n  const { email, name, errorMessage, isloading } = state;\n  const onchange = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n      errorMessage:\"\"\n    });\n  };\n  const save_step1 =(e)=>{\n    e.preventDefault()\n    if(!email||!name){\n     return setState({\n        ...state,\n        errorMessage:\"all fields are required\"\n      })\n    }\n    setState({\n      ...state,\n      step1:false,\n      step2:true\n    })\n  }\n  return (\n    <div>\n      <div className=\"container\">\n      <Steps step={1}/>\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <h2 className=\"card-heading\">\n              Get started\n              <small>Let us create your account</small>\n            </h2>\n          </div>\n          <form className=\"card-form\" onSubmit={save_step1}>\n            <div className=\"text-center text-danger\">{errorMessage}</div>\n            <div className=\"input\">\n              <input\n                type=\"text\"\n                className=\"input-field\"\n                value={name}\n                onChange={onchange}\n                name={\"name\"}\n                required\n              />\n              <label className=\"input-label\">Full name</label>\n            </div>\n            <div className=\"input\">\n              <input\n                type=\"text\"\n                className=\"input-field\"\n                value={email}\n                name={\"email\"}\n                onChange={onchange}\n                required\n              />\n              <label className=\"input-label\">Email</label>\n            </div>\n            <div className=\"action\">\n              <button className=\"action-button\" onClick={save_step1}>Get started</button>\n            </div>\n          </form>\n          <div className=\"card-info\">\n            <p>\n              By signing up you are agreeing to our{\" \"}\n              <a href=\"#\">Terms and Conditions</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Registration1;\n","import axios from \"axios\";\nimport React, { useContext } from \"react\";\nimport { Col, Row, Container, Alert, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport \"./signin.css\";\nimport Steps from \"../step\";\nimport { Appcontext, root } from \"../../config\";\n\nconst Registration2 = (props) => {\n  const { state, setState }: any = useContext(Appcontext);\n  const { password, confirm_password, email,name,isloading,errorMessage } = state;\n  const onchange = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const save_step2 =(e)=>{\n    e.preventDefault()\n    if(!password||!confirm_password){\n      return setState({\n         ...state,\n         errorMessage:\"all fields are required\"\n       })\n     }\n     if(password!==confirm_password){\n      return setState({\n        ...state,\n        errorMessage:\"confirm password must be equal to password\"\n      }) \n     }\n     submitform()\n  }\n  const submitform = () => {\n    setState({\n      ...state,\n      isloading:true,\n    })\n    const data = {\n      email,\n      name,\n      password,\n    };\n    axios.post(`${root}users/user`,data)\n    .then((res)=>{\n      setState({\n        ...state,\n        step2: false,\n        step3:true,\n        isloading:false,\n      });\n    })\n    .catch((err)=>{\n      setState({\n        ...state,\n        step2:false,\n        isloading:false,\n        errorMessage:\"Failed to register\"\n      })\n    })\n  };\n  return (\n    <div>\n      <div className=\"container\">\n        <Steps step={2} />\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <h2 className=\"card-heading\">\n              Step 2<small>Create password for your new account</small>\n            </h2>\n          </div>\n          <form className=\"card-form\" onSubmit={save_step2}>\n          <div className=\"text-center text-danger\">{errorMessage}</div>\n            <div className=\"input\">\n              <input\n                type=\"password\"\n                className=\"input-field\"\n                value={password}\n                name=\"password\"\n                onChange={onchange}\n                required\n              />\n              <label className=\"input-label\">Password</label>\n            </div>\n            <div className=\"input\">\n              <input\n                type=\"password\"\n                value={confirm_password}\n                name=\"confirm_password\"\n                onChange={onchange}\n                className=\"input-field\"\n                required\n              />\n              <label className=\"input-label\">Confirm Password</label>\n            </div>\n            <div className=\"action\">\n              <button className=\"action-button\" onClick={save_step2}>{isloading?\"Submitting\":\"Submit\"}</button>\n            </div>\n          </form>\n          <div className=\"card-info\">\n            <p>\n              By signing up you are agreeing to our{\" \"}\n              <a href=\"#\">Terms and Conditions</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Registration2;","import axios from \"axios\";\nimport React from \"react\";\nimport \"./signin.css\";\n\nconst Success = (props) => {\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"card1\">\n          <div className=\"card2\">\n            <i className=\"checkmark\">✓</i>\n          </div>\n          <h1>Success</h1>\n          <p>\n            Congratulations\n            <br /> you have successfully registered!\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Success;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Registration1 from \"./registration1\";\nimport Registration2 from \"./registration2\";\nimport \"./signin.css\";\nimport { Appcontext } from \"../../config\";\nimport Success from \"./success\";\n\nconst Registration = (props) => {\n  const [state, setState] = useState({\n    password: \"\",\n    confirm_password: \"\",\n    name: \"\",\n    email: \"\",\n    isloading: false,\n    step1: true,\n    step2: false,\n    step3: false,\n    errorMessage: \"\",\n  });\n  const { step1, step2,step3 } = state;\n  return (\n    <div>\n      <Appcontext.Provider\n        value={{\n          state,\n          setState,\n        }}\n      >\n        {step1 && <Registration1 />}\n        {step2 && <Registration2 />}\n        {step3 && <Success />}\n      </Appcontext.Provider>\n    </div>\n  );\n};\nexport default Registration;","import React, { Component } from \"react\";\nimport { Switch, Route, BrowserRouter,HashRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport Registration from './Components/Sign_in/registration';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <HashRouter>\n            <Switch>\n              <Route component={Registration} path=\"/\" exact={true} />\n              {/* Contractor Dashbaord */}\n            </Switch>\n          </HashRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // console.log(\n          //   'This web app is being served cache-first by a service ' +\n          //     'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          // );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // console.log(\n              //   'New content is available and will be used when all ' +\n              //     'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // console.log(\n      //   'No internet connection found. App is running in offline mode.'\n      // );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Switch, Route, BrowserRouter, HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}